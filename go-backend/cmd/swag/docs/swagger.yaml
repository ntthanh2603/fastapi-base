basePath: /v1/2025
definitions:
  dto.UserRegisterReq:
    properties:
      email:
        type: string
      lang:
        maxLength: 5
        minLength: 2
        type: string
      password:
        maxLength: 50
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - lang
    - password
    - username
    type: object
  github_com_anonystick_go-drunk-backend-api-by-ddd-java_internal_auth_controller_dto.UserProfileReq:
    properties:
      account_id:
        description: AccountID int64 `json:"account_id" binding:"required"`
        maximum: 50
        minimum: 1
        type: integer
    required:
    - account_id
    type: object
  github_com_anonystick_go-drunk-backend-api-by-ddd-java_internal_auth_domain_model_entity.Account:
    properties:
      accountId:
        type: integer
      createTime:
        type: string
      email:
        type: string
      isDeleted:
        type: integer
      language:
        type: string
      lastLoginTime:
        type: string
      password:
        type: string
      status:
        type: integer
      updateTime:
        type: string
      username:
        type: string
    type: object
  response.APIError:
    properties:
      err: {}
      message:
        type: string
      statusCode:
        type: integer
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8800
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a server for a Go Drunk Backend API, demonstrating DDD principles.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Go Drunk Backend API by DDD
  version: "1.0"
paths:
  /auth/profile:
    post:
      consumes:
      - application/json
      description: return user profile information by AccountID
      parameters:
      - description: HMAC Signature for request authentication
        in: header
        name: X-Sign
        required: true
        type: string
      - description: Request timestamp for validity check
        in: header
        name: X-Request-Time
        required: true
        type: string
      - description: User Profile Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_anonystick_go-drunk-backend-api-by-ddd-java_internal_auth_controller_dto.UserProfileReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_anonystick_go-drunk-backend-api-by-ddd-java_internal_auth_domain_model_entity.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.APIError'
      summary: get user profile
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account with the provided details.
      parameters:
      - description: User Registration Request Details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserRegisterReq'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully, returns the new account ID" //
            SỬA Ở ĐÂY
          schema:
            properties:
              account_id:
                type: string
            type: object
        "400":
          description: Invalid request (e.g., validation error, bad payload)
          schema:
            $ref: '#/definitions/response.APIError'
        "409":
          description: Conflict (e.g., email or username already exists)
          schema:
            $ref: '#/definitions/response.APIError'
        "500":
          description: Internal server error (e.g., registration process failed)
          schema:
            $ref: '#/definitions/response.APIError'
      summary: Register a new user
      tags:
      - Auth
swagger: "2.0"
